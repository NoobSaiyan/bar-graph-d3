{"version":3,"sources":["charts/BarChart.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BarChart","width","height","data","ref","useRef","useEffect","d3","current","attr","style","selection","selectAll","yScale","domain","range","transition","duration","d","enter","append","i","exit","remove","draw","className","datas","App","useState","setData","changeData","length","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAiEeA,EAxDmB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC5CC,EAAMC,iBAAsB,MAiDlC,OA/CAC,qBAAU,WACRC,IAAUH,EAAII,SACXC,KAAK,QAASR,GACdQ,KAAK,SAAUP,GACfQ,MAAM,SAAU,mBAChBA,MAAM,aAAc,WAGzBJ,qBAAU,YACK,WACX,IACIK,EADQJ,IAAUH,EAAII,SACNI,UAAU,QAAQT,KAAKA,GACvCU,EAASN,MAEVO,OAAO,CAAC,EAAGP,IAAOJ,IAAS,IAC3BY,MAAM,CAAC,EAAGb,EAAS,MAEtBS,EACGK,aACAC,SAAS,KACTR,KAAK,UAAU,SAACS,GAAD,OAAOL,EAAOK,MAC7BT,KAAK,KAAK,SAACS,GAAD,OAAOhB,EAASW,EAAOK,MAEpCP,EACGQ,QACAC,OAAO,QACPX,KAAK,KAAK,SAACS,EAAGG,GAAJ,OAAc,GAAJA,KACpBZ,KAAK,KAAK,SAACS,GAAD,OAAOhB,KACjBO,KAAK,QAAS,IACdA,KAAK,SAAU,GACfA,KAAK,OAAQ,UACbO,aACAC,SAAS,KACTR,KAAK,UAAU,SAACS,GAAD,OAAOL,EAAOK,MAC7BT,KAAK,KAAK,SAACS,GAAD,OAAOhB,EAASW,EAAOK,MAEpCP,EACGW,OACAN,aACAC,SAAS,KACTR,KAAK,KAAK,SAACS,GAAD,OAAOhB,KACjBO,KAAK,SAAU,GACfc,SAELC,KACC,CAACrB,EAAMD,IAGR,qBAAKuB,UAAU,QAAf,SACE,qBAAKrB,IAAKA,OCzDVsB,EAAQ,CACZ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7C,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,IAEtCL,EAAI,EAsBOM,MApBf,WAAgB,IAAD,EACWC,mBAAmB,IAD9B,mBACNzB,EADM,KACA0B,EADA,KAGbvB,qBAAU,WACRwB,MACC,IAEH,IAAMA,EAAa,WACjBD,EAAQH,EAAML,MACVA,IAAMK,EAAMK,SAAQV,EAAI,IAE9B,OACE,sBAAKI,UAAU,MAAf,UACE,mDACA,wBAAQO,QAASF,EAAjB,yBACA,cAAC,EAAD,CAAU7B,MAAO,IAAKC,OAAQ,IAAKC,KAAMA,QCZhC8B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.003fe7f0.chunk.js","sourcesContent":["import * as d3 from 'd3'\r\nimport React, { useRef, useEffect } from 'react'\r\n\r\ninterface props {\r\n  width: number\r\n  height: number\r\n  data: number[]\r\n}\r\n\r\nconst BarChart: React.FC<props> = ({ width, height, data }) => {\r\n  const ref = useRef<SVGSVGElement>(null)\r\n\r\n  useEffect(() => {\r\n    d3.select(ref.current)\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .style('border', '1px solid black')\r\n      .style('margin-top', '10px')\r\n  })\r\n\r\n  useEffect(() => {\r\n    const draw = () => {\r\n      const svg = d3.select(ref.current)\r\n      let selection = svg.selectAll('rect').data(data)\r\n      let yScale = d3\r\n        .scaleLinear()\r\n        .domain([0, d3.max(data) || 0])\r\n        .range([0, height - 100])\r\n\r\n      selection\r\n        .transition()\r\n        .duration(300)\r\n        .attr('height', (d) => yScale(d))\r\n        .attr('y', (d) => height - yScale(d))\r\n\r\n      selection\r\n        .enter()\r\n        .append('rect')\r\n        .attr('x', (d, i) => i * 45)\r\n        .attr('y', (d) => height)\r\n        .attr('width', 40)\r\n        .attr('height', 0)\r\n        .attr('fill', 'orange')\r\n        .transition()\r\n        .duration(300)\r\n        .attr('height', (d) => yScale(d))\r\n        .attr('y', (d) => height - yScale(d))\r\n\r\n      selection\r\n        .exit()\r\n        .transition()\r\n        .duration(300)\r\n        .attr('y', (d) => height)\r\n        .attr('height', 0)\r\n        .remove()\r\n    }\r\n    draw()\r\n  }, [data, height])\r\n\r\n  return (\r\n    <div className='chart'>\r\n      <svg ref={ref} />\r\n    </div>\r\n  )\r\n}\r\nexport default BarChart\r\n","import React, { useEffect, useState } from 'react'\nimport './App.css'\nimport BarChart from './charts/BarChart'\n\nconst datas = [\n  [10, 30, 40, 20, 98, 43, 24, 54, 65, 67, 57, 6],\n  [10, 40, 30, 20, 50, 10, 34, 54, 65],\n  [60, 30, 40, 20, 30, 43, 45, 56, 7, 87, 8],\n]\nlet i = 0\n\nfunction App() {\n  const [data, setData] = useState<number[]>([])\n\n  useEffect(() => {\n    changeData()\n  }, [])\n\n  const changeData = () => {\n    setData(datas[i++])\n    if (i === datas.length) i = 0\n  }\n  return (\n    <div className='App'>\n      <h2>Graphs with React</h2>\n      <button onClick={changeData}>Change Data</button>\n      <BarChart width={600} height={400} data={data} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}